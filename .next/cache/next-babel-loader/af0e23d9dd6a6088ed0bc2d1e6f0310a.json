{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; //import thunk from 'redux-thunk';\n\nimport { createLogger } from \"redux-logger\";\nimport { promiseMiddleware, localStorageMiddleware } from \"./middleware\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from './reducer'; // Build the middleware for intercepting and dispatching navigation actions\n\nconst myRouterMiddleware = routerMiddleware(null);\n\nconst getMiddleware = () => {\n  if (true) {\n    return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware);\n  } else {\n    // Enable additional logging in non-production environments.\n    return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, createLogger());\n  }\n};\n\nexport const store = (initialState = {}) => {\n  return createStore(createRootReducer(), initialState, getMiddleware());\n};","map":null,"metadata":{},"sourceType":"module"}